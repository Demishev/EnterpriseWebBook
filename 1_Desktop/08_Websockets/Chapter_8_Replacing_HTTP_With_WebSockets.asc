== Replacing HTTP with WebSockets

[quote, http://ietf.org/mail-archive/web/hybi/current/msg00784.html ]
____
Reducing kilobytes of data to 2 bytes… and reducing latency from 150ms
to 50 ms is far more than marginal. In fact, these two factors alone are
enough to make WebSocket seriously interesting…
____

This chapter will introduce the WebSocket API, which is a part of HTML5 spec. We'll pick one of the data flow in Save a Child site and replace HTTP communication with WebSockets protocol. Using the monitoring tool we'll show the performance bandwidth usage benefits that WebSockets protocol brings to the Web.
This chapter will be based on http://www.youtube.com/watch?v=vP6MfPnE1c0[this WebSockets presentation].

Will use http://java.net/projects/tyrus[Project «Tyrus»] with http://dlc.sun.com.edgesuite.net/glassfish/4.0/promoted/[latest Glassfish builds]

Show the server-side data push with Websockets.  Look at Socket.IO library.  Compary the data throughput with the HTTP datapush demonstrated in Ch4.

=== Legacy Web and its options for «Realtime» apps

- (Short) Polling
    * send request to the server every X seconds.
    * the response is «empty» if there is no update
- Long Polling (ajax push)
    * send request to the server, wait for an event to happen, then send the response
    * the response is never empty
    * HTTP specification satisfied: indistinguishable from «slow» server
- HTTP Streaming
    * send the request, wait for events, stream multipart/chunked response, and then wait for the events.
    * The response is continually appended to.

TBD

=== Server-Sent Events

- +eventSource+ API
- Use only when data doesn't need to be sent from the client to the server
- Standardization of server-side push
- Minimal overhead (tens of bytes, not hundreds)
- HTTP based (but requires server support)

[source,javascript]
-----------------------------------------------------
include::include/sse_api_example.js[]
-----------------------------------------------------

<1> Create new EventSource
<2> Add handlers for open and error
<3> Handle messages

=== Introducing Websockets

What is websockets?

[quote,http://peterlubbers.github.com/devcon5-keynote/#38]
____
Clean standardization for complex hacks used to simulate real time, bidirectional communication
____

- IETF RFC 6455 Protocol
- Client-side W3C API
    * Websocket Interface

[source,java]
----
include::include/ws_interface.il[]
----

* API

[source,javascript]
----
include::include/ws_api_example.js[]
----

- websocket handshake
    1. client sends +GET+-request for protocol upgradein
    2. server send response and confirms protocol upgrade
    3. +websocket.readyState==1+
    4. +websocket.onmessage+ listener for incoming messages, +websocket.send()+ to send data to server

****

NOTE: There is no limit to the number of established WebSocket connections a client can have with a single remote host.  Servers can refuse to accept connections from hosts/IP addresses with an excessive number of existing connections or disconnect resource- hogging connections when suffering high load.

****

- websocket frame anatomy
- heartbeating
- Client-side frameworks
- Server-side API

=== Websocket Use Cases

WebSockets really shine with following applications:

- Live trading/sports ticker
- Controlling medical equipment over the web
- Chat applications
- Multiplayer online games
- Realtime updating social streams

Downside: websocket spec gives you only transport, but there is no highlevel protocol. Developers need to invent problem related protocols (text or binary).

==== Protocols thoughts (for Enterprise world)

- SOAP, XML, XSD
- REST, JSON, CSV
- http://code.google.com/p/protobuf-js/[ProtoBuff for js], [Apache Thrift]

=== Websockets and proxies

TBD

=== WebSockets and HTTP 2.0

[quote, Chief Product Architect at Akamai, Stephen Ludin]
____
"I use the metaphor of hammers and screwdrivers. Both tools are indispensible in my workshop...

Use the right tool for the job.
In the case of page and object delivery use SPDY.
In the case of lightweight or streaming data delivery look to WebSocket."

source: https://blogs.akamai.com/2012/07/spdy-and-websocket-support-at-akamai.html
____

- http 2.0 and spdy
- spdy and websockets
    - framed protocols (describe frames)
